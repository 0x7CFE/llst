Undefined>>main
    ...
    0059 SendMessage name
    0061 PushTemporary 1        Method min
    0062 MarkArguments 3
    0063 SendMessage at:put:
    0065 DoSpecial popTop

Method>>name
    0000 PushInstance 0
    0001 DoSpecial stackReturn
    0002 DoSpecial popTop
    0003 DoSpecial selfReturn

OrderedArray location: value    
    0000 PushConstant 1
    0001 AssignTemporary 0              low <- 1
    0002 DoSpecial popTop
    0003 PushArgument 0                 value
    0004 MarkArguments 1                #(value)
    0005 SendMessage size
    0006 PushConstant 1
    0007 SendBinary +
    0008 AssignTemporary 1              high <- self size + 1.
    0009 DoSpecial popTop
    0010 PushBlock
    0013     PushTemporary 0
    0014     PushTemporary 1
    0015     SendBinary <
    0016     DoSpecial stackReturn
    0017 PushTemporary 0
    0018 PushTemporary 1
    0019 SendBinary <
 *  0020 DoSpecial branchIfFalse 53
    0023 PushTemporary 0
    0024 PushTemporary 1
    0025 SendBinary +
    0026 PushConstant 2
    0027 MarkArguments 2
    0028 SendMessage quo:
    0029 AssignTemporary 2              mid <- (low + high) quo: 2.
    0030 DoSpecial popTop
    0031 PushArgument 0
    0032 PushTemporary 2
    0033 MarkArguments 2
    0034 SendMessage at:
    0035 PushArgument 1
    0036 SendBinary <
 #  0037 DoSpecial branchIfFalse 47
    0040 PushTemporary 2
    0041 PushConstant 1
    0042 SendBinary +
    0043 AssignTemporary 0
    0044 DoSpecial branch 49
 #  0047 PushTemporary 2
    0048 AssignTemporary 1
    0049 DoSpecial popTop
    0050 DoSpecial branch 17
 *  0053 PushConstant 0
    0054 DoSpecial popTop
    0055 PushTemporary 0
    0056 DoSpecial stackReturn
    0057 DoSpecial popTop
    0058 DoSpecial selfReturn
    
    
Dictionary at: index put: value
    0000 PushInstance 0                 keys  
    0001 PushArgument 1                 value
    0002 MarkArguments 2                #(keys value)
    0003 SendMessage location:          keys location: value
    0004 AssignTemporary 0              position <- keys location: value
    0005 DoSpecial popTop
    0006 PushTemporary 0                position
    0007 PushInstance 0                 keys
    0008 MarkArguments 1                #(keys)
    0009 SendMessage size               keys size
    0010 SendBinary <=                  keys size <= 
 *  0011 DoSpecial branchIfFalse 24     position <= keys size
    0014 PushArgument 1
    0015 PushInstance 0
    0016 PushTemporary 0
    0017 MarkArguments 2
    0018 SendMessage at:
    0019 MarkArguments 2
    0020 SendMessage =
 #  0021 DoSpecial branch 25
 *  0024 PushConstant false
 #  0025 DoSpecial branchIfFalse 36
    0028 PushInstance 1
    0029 PushTemporary 0
    0030 PushArgument 2
    0031 MarkArguments 3
    0032 SendMessage at:put:
    0033 DoSpecial branch 49
 #  0036 PushInstance 0
    0037 PushArgument 1
    0038 PushTemporary 0
    0039 MarkArguments 3
    0040 SendMessage insert:at:
    0041 AssignInstance 0
    0042 DoSpecial popTop
    0043 PushInstance 1
    0044 PushArgument 2
    0045 PushTemporary 0
    0046 MarkArguments 3
    0047 SendMessage insert:at:
    0048 AssignInstance 1
    0049 DoSpecial popTop
    0050 PushArgument 2
    0051 DoSpecial stackReturn
    0052 DoSpecial popTop
    0053 DoSpecial selfReturn






initialMethod
    pushConstant    10 (nil)
    markArguments   1
    sendMessage     main
    
nil>>main
    0000 PushLiteral 0              Char
    0001 MarkArguments 1            #(Char)
    0002 SendMessage initialize     Char initialize
    ...

Array new: size
    0000 PushArgument 0                 self                                                
    0001 PushArgument 1                 257                                         
    0002 DoPrimitive new                <7 self 257>
    0004 DoSpecial popTop               nil? кого вытаскиваем?
    0005 DoSpecial selfReturn

Block value: arg
    0000 PushArgument 1                  i
    0001 PushArgument 0                  block
    0002 DoPrimitive block invoke
         TOS : 
    0004 DoSpecial popTop
    0005 PushArgument 0
    0006 MarkArguments 1
    0007 SendMessage argCount
    0008 DoSpecial popTop
    0009 DoSpecial selfReturn
    

???
    0000 PushArgument 1                 1
    0001 PushArgument 0 
    
MetaChar
initialize
    0000 PushInstance 6                 chars
    0001 SendUnary isNil                chars isNil
    0002 DoSpecial branchIfFalse 33     ifTrue:
    0005 PushLiteral 0                  Array
    0006 PushLiteral 1                  257
    0007 MarkArguments 2                #(Array 257)
    0008 SendMessage new:
    0009 AssignInstance 6               chars = Array new: 257
    0010 DoSpecial popTop
    0011 PushConstant 1                 1
    0012 PushLiteral 3                  257
    0013 PushBlock
    0016     PushInstance 6             chars
    0017     PushTemporary 0            :idx
    0018     PushLiteral 4              Char
    0019     PushTemporary 0            :idx                                                                                                                      
    0020     PushConstant 1             1                                                                                                                     
    0021     MarkArguments 2            #(:idx 1)
    0022     SendMessage -              :(idx - 1) SmallInt ?
    0023     MarkArguments 2                                                                                                                                 
    0024     SendMessage basicNew:      new_char 
             TOS : instance of char
    0025     MarkArguments 3            #(chars idx new_char)
    0026     SendMessage at:put:                                                                                                                             
             TOS : chars
    0027     DoSpecial stackReturn                                                                                                                           
    0028 MarkArguments 3                 #(1 257 block)                                                                                                                    
    0029 SendMessage to:do:
    0030 DoSpecial branch 34
    0033 PushConstant nil
    0034 DoSpecial popTop
    0035 DoSpecial selfReturn

Number to: limit do: aBlock   
    0000 PushArgument 0                  self
    0001 AssignTemporary 0               | i | i <- self
    0002 DoSpecial popTop
    0003 PushBlock
    0006     PushTemporary 0             i
    0007     PushArgument 1              limit
    0008     SendBinary <=
    0009     DoSpecial stackReturn
    0010 PushTemporary 0                 value of self
    0011 PushArgument 1                  limit
    0012 SendBinary <=
    0013 DoSpecial branchIfFalse 29
    0016 PushArgument 2                  aBlock
    0017 PushTemporary 0                 i
    0018 MarkArguments 2                 #(block i)
    0019 SendMessage value:              aBlock value: i
    0020 DoSpecial popTop
    0021 PushTemporary 0                 i
    0022 PushConstant 1                  1
    0023 SendBinary +                    i + 1
    0024 AssignTemporary 0               i <- i + 1
    0025 DoSpecial popTop
    0026 DoSpecial branch 10
    0029 PushConstant 0
    0030 DoSpecial popTop
    0031 DoSpecial selfReturn
    
SmallInt -
    0000 PushArgument 0                  1
    0001 PushArgument 1                  1
    0002 DoPrimitive SmallInt -          1 - 1
    0004 DoSpecial popTop                this should not be executed
    

MetaChar basicNew:    
    0000 PushArgument 0                  MetaChar
    0001 PushArgument 0                  MetaChar
    0002 MarkArguments 1
    0003 SendMessage new                 MetaChar new
    
         TOS: instance of Char
    
    0004 PushConstant 1                  1
    0005 PushArgument 1                  0
    0006 MarkArguments 4                 #(MetaChar new_char 1 0)
    0007 SendMessage in:at:put:
         
         TOS: instance of Char
         
    0008 DoSpecial stackReturn
    0009 DoSpecial popTop
    0010 DoSpecial selfReturn
    
Char new  
    0000 PushArgument 0                 Char
    0001 PushInstance 3                 1
    0002 DoPrimitive new
    0004 DoSpecial popTop               should not be executed
    0005 DoSpecial selfReturn

MetaObject in:at:put:
    0000 PushArgument 3                 0
    0001 PushArgument 1                 new_char
    0002 PushArgument 2                 1
    0003 DoPrimitive at:put:            <5>
    
    0005 DoSpecial popTop
    0006 DoSpecial selfReturn

Array at: index put: value   
    0000 PushArgument 2                 char
    0001 PushArgument 0                 chars
    0002 PushArgument 1                 1
    0003 DoPrimitive at:put:            chars at: idx put: (Char basicNew: idx-1)
    
         TOS : chars
    
    0005 DoSpecial popTop
    0006 PushArgument 0
    0007 PushArgument 1
    0008 MarkArguments 2
    0009 SendMessage includesKey:
    0010 DoSpecial branchIfTrue 19
    0013 PushArgument 0
    0014 MarkArguments 1
    0015 SendMessage badIndex
    0016 DoSpecial branch 20

    0019 PushConstant nil
    0020 DoSpecial popTop
    0021 PushArgument 0
    0022 MarkArguments 1
    0023 SendMessage primitiveFailed
    0024 DoSpecial popTop
    0025 DoSpecial selfReturn
    